- name: create ec2 and r53 records
  hosts: local
  connection: local
  vars:
    subnet_id: subnet-01df9781d6aa29990 #we will be giving ansible server subnet id
    sg_id: "sg-010d164dd25339303"
    ami_id: "ami-09c813fb71547fc4f"
    instances:
    - mysql
    - backend
    - frontend
    zone: devops20lpa.online
  tasks: 
  - name: create ec2 instance
    amazon.aws.ec2_instance:
     name: "{{ item }}"
     vpc_subnet_id: "{{ subnet_id }}"
     instance_type: "t2.micro"  
     security_group: "{{ sg_id }}"
     image_id: "{{ ami_id }}"
    loop: "{{ instances }}" 
    register: ec2_instances  
  
  - name: print the output
    ansible.builtin.debug: 
     msg: "{{ ec2_instances }}"
  
  #record for private ip address
  - name: create r53 record
    ansible.builtin.route53:
     state: present
     zone: "{{ zone }}"
     record: "{{ item.item }}.{{ zone }}" #this will give the name as mysql.devops20lpa.online
     type: A
     ttl: 1
     value: "{{ item.instances[0].private_ip_address }}" #this will give the private ip of server each time
     wait: true
     overwrite: true #this will override the existing records
    loop: "{{ ec2_instances.results }}"

    #record for public ip only public ip address for frontend
  - name: create r53 record
    ansible.builtin.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}" #this will give the name `devops20lpa.online
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}" #this will give the private ip of server each time
      wait: true
      overwrite: true #this will override the existing records
      loop: "{{ ec2_instances.results }}"
    when: item.item == "frontend"

